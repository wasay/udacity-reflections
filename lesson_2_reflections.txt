What happens when you initialize a repository? Why do you need to do it?
	A ".git" folder is added to the directory and it will allow me to track changes into the 
	directory and will allow me to see the history of a given file.
	
How is the staging area different from the working directory and the repository? 
What value do you think it offers?
	Staging area allows to mark a change in time, while I continue to work on a file and either 
	I can update the staging area with the updates or discard the changes in the file.

How can you use the staging area to make sure you have one commit per logical change?
	On every logical change that is completed, the change can be committed, 
	thus the staging area can be used for another logical change.
	
What are some situations when branches would be helpful in keeping your history organized? 
How would branches help?
	When I am working on two different task and task 2 is ready for review while I need some more time testing task 1.
	Branches will enable me to switch gears and work on a different task, without worrying about losing or introducing errors from another branch.
	
How do the diagrams help you visualize the branch structure?
	The diagram will help us connect which commits are parent and which commits are derived from which branch.
	
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	The changes made in two separate branches will merge and be represented as one branch.
	We represent the diagram as the way we do because any other way to display them then time will be harder to understand.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	Automatic Merging:
		Pros: It saves time.
		Cons: An always automatic change can create unknown issues.
	Manual Merging:
		Pros: Nothing gets merged unless someone reviews the code.
		Cons: Slow process, have to constantly be in contact with other developers as to what is latest.



